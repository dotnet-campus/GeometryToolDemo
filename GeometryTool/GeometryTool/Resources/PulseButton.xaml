<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="clr-namespace:BitsOfStuff" 
  >

       	<Style x:Key="PulseButton" TargetType="{x:Type Button}">
      		<Style.BasedOn>
      			<Style TargetType="{x:Type ButtonBase}">
      				<Setter Property="FocusVisualStyle">
      					<Setter.Value>
      						<Style>
      							<Setter Property="Control.Template">
      								<Setter.Value>
      									<ControlTemplate>
                                        <Border>
                                        </Border>
      									</ControlTemplate>
      								</Setter.Value>
      							</Setter>
      						</Style>
      					</Setter.Value>
      				</Setter>
      				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
      				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
      				<Setter Property="BorderBrush">
      					<Setter.Value>
      						<SolidColorBrush/>
      					</Setter.Value>
      				</Setter>
      				<Setter Property="BorderThickness" Value="3,3,3,3"/>
      				<Setter Property="HorizontalContentAlignment" Value="Center"/>
      				<Setter Property="VerticalContentAlignment" Value="Center"/>
      				<Setter Property="Padding" Value="0,0,1,1"/>
      				<Setter Property="Template">
      					<Setter.Value>
      						<ControlTemplate TargetType="{x:Type ButtonBase}">
      							<ControlTemplate.Resources>
      								<Storyboard x:Key="OnMouseEnter1">
      									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
      										<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
      										<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
      									</DoubleAnimationUsingKeyFrames>
      									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
      										<SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
      										<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
      									</DoubleAnimationUsingKeyFrames>
      									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
      										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
      										<SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
      									</DoubleAnimationUsingKeyFrames>
      								</Storyboard>
      							</ControlTemplate.Resources>
      							<Border RenderTransformOrigin="0.5,0.5" x:Name="border" Width="Auto" Height="Auto" BorderBrush="{x:Null}" BorderThickness="5,5,5,5" CornerRadius="4,4,4,4" Background="{x:Null}">
      								<Border.RenderTransform>
      									<TransformGroup>
      										<ScaleTransform ScaleX="1" ScaleY="1"/>
      										<SkewTransform AngleX="0" AngleY="0"/>
      										<RotateTransform Angle="0"/>
      										<TranslateTransform X="0" Y="0"/>
      									</TransformGroup>
      								</Border.RenderTransform>
      								<ContentPresenter Width="Auto" Height="Auto" RenderTransformOrigin="0.403,0.5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
      							</Border>
      							<ControlTemplate.Triggers>
      								<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="border">
      									<BeginStoryboard Storyboard="{StaticResource OnMouseEnter1}"/>
      								</EventTrigger>
      								<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
      								<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
      								<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>
      								<Trigger Property="IsKeyboardFocused" Value="True"/>
      								<Trigger Property="Button.IsDefaulted" Value="True"/>
      								<Trigger Property="IsPressed" Value="True"/>
      								<Trigger Property="ToggleButton.IsChecked" Value="True"/>
      								<Trigger Property="IsEnabled" Value="False">
      									<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
      								</Trigger>
      							</ControlTemplate.Triggers>
      						</ControlTemplate>
      					</Setter.Value>
      				</Setter>
      			</Style>
      		</Style.BasedOn>
      	</Style>

</ResourceDictionary>
  